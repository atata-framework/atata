#pragma warning disable S103 // Lines should not be too long

[assembly: SuppressMessage("Major Code Smell", "S2743:Static fields should not be used in generic types", Justification = "<Pending>", Scope = "member", Target = "~F:Atata.UnitTests.DataProvision.ObjectVerificationProviderExtensionMethodTests.ExtensionMethodTestSuite`2.s_testSuiteData")]
[assembly: SuppressMessage("Naming", "CA1720:Identifier contains type name", Justification = "<Pending>", Scope = "member", Target = "~P:Atata.UnitTests.DataProvision.EnumerableProviderTests.TestOwner.Object")]
[assembly: SuppressMessage("Minor Code Smell", "S1125:Boolean literals should not be redundant", Justification = "<Pending>", Scope = "member", Target = "~M:Atata.UnitTests.Expressions.ObjectExpressionStringBuilderTests.GetExpressionTestCases~System.Collections.Generic.IEnumerable{NUnit.Framework.TestCaseData}")]
[assembly: SuppressMessage("Performance", "CA1802:Use literals where appropriate", Justification = "<Pending>", Scope = "member", Target = "~F:Atata.UnitTests.Expressions.ImprovedExpressionStringBuilderTests.s_testFieldValue")]
[assembly: SuppressMessage("Minor Code Smell", "S1125:Boolean literals should not be redundant", Justification = "<Pending>", Scope = "member", Target = "~M:Atata.UnitTests.Expressions.ImprovedExpressionStringBuilderTests.GetExpressionTestCases~System.Collections.Generic.List{NUnit.Framework.TestCaseData}")]
[assembly: SuppressMessage("Minor Code Smell", "S3962:\"static readonly\" constants should be \"const\" instead", Justification = "<Pending>", Scope = "member", Target = "~F:Atata.UnitTests.Expressions.ImprovedExpressionStringBuilderTests.s_testFieldValue")]
[assembly: SuppressMessage("Design", "CA1024:Use properties where appropriate", Justification = "<Pending>", Scope = "member", Target = "~M:Atata.UnitTests.Expressions.ImprovedExpressionStringBuilderTests.StaticClass.GetBool~System.Boolean")]
[assembly: SuppressMessage("Design", "CA1024:Use properties where appropriate", Justification = "<Pending>", Scope = "member", Target = "~M:Atata.UnitTests.Expressions.ImprovedExpressionStringBuilderTests.StaticClass.GetInt~System.Int32")]
[assembly: SuppressMessage("Major Code Smell", "S2326:Unused type parameters should be removed", Justification = "<Pending>", Scope = "type", Target = "~T:Atata.UnitTests.Utils.TypeFinderTests.StaticSubClass.GenericSubClass`1")]
[assembly: SuppressMessage("Design", "CA1000:Do not declare static members on generic types", Justification = "<Pending>", Scope = "member", Target = "~P:Atata.UnitTests.GenericCollectionAssertionsExtensions.ReferenceEqualityComparer`1.Default")]
[assembly: SuppressMessage("Design", "CA1000:Do not declare static members on generic types", Justification = "<Pending>", Scope = "member", Target = "~M:Atata.UnitTests.DataProvision.ObjectVerificationProviderExtensionMethodTests.ExtensionMethodTestSuite`2.GetTestActions~System.Collections.Generic.IEnumerable{NUnit.Framework.TestCaseData}")]
[assembly: SuppressMessage("Design", "CA1028:Enum Storage should be Int32", Justification = "<Pending>", Scope = "type", Target = "~T:Atata.UnitTests.EnumExtensionMethodsTests.UInt64EnumValues")]
[assembly: SuppressMessage("Usage", "CA2217:Do not mark enums with FlagsAttribute", Justification = "<Pending>", Scope = "type", Target = "~T:Atata.UnitTests.EnumExtensionMethodsTests.UInt64EnumValues")]
[assembly: SuppressMessage("Usage", "CA2217:Do not mark enums with FlagsAttribute", Justification = "<Pending>", Scope = "type", Target = "~T:Atata.UnitTests.EnumExtensionMethodsTests.Int64EnumValues")]
[assembly: SuppressMessage("Minor Code Smell", "S2094:Classes should not be empty", Justification = "<Pending>", Scope = "type", Target = "~T:Atata.UnitTests.EventBusTests.TestEvent")]
[assembly: SuppressMessage("Minor Code Smell", "S2094:Classes should not be empty", Justification = "<Pending>", Scope = "type", Target = "~T:Atata.UnitTests.Sessions.AtataSessionEventSubscriptionsBuilderTests.Add.TestEvent")]
[assembly: SuppressMessage("Minor Code Smell", "S2094:Classes should not be empty", Justification = "<Pending>", Scope = "type", Target = "~T:Atata.UnitTests.Utils.TypeFinderTests.StaticSubClass.NonGenericSubClass")]
[assembly: SuppressMessage("Minor Code Smell", "S2094:Classes should not be empty", Justification = "<Pending>", Scope = "type", Target = "~T:Atata.UnitTests.Utils.TypeFinderTests.StaticSubClass.GenericSubClass`1")]
[assembly: SuppressMessage("Minor Code Smell", "S2094:Classes should not be empty", Justification = "<Pending>", Scope = "type", Target = "~T:Atata.UnitTests.Utils.TypeFinderTests.SubClass")]
[assembly: SuppressMessage("Reliability", "CA2000:Dispose objects before losing scope", Justification = "<Pending>", Scope = "member", Target = "~M:Atata.UnitTests.AtataSessionCollectionTests.SetUpAsync~System.Threading.Tasks.Task")]
[assembly: SuppressMessage("Major Code Smell", "S4144:Methods should not have identical implementations", Justification = "<Pending>", Scope = "member", Target = "~M:Atata.UnitTests.DataProvision.StaticSubjectTests.TestClass.ThrowAsTaskAsync~System.Threading.Tasks.Task")]
[assembly: SuppressMessage("Major Code Smell", "S4144:Methods should not have identical implementations", Justification = "<Pending>", Scope = "member", Target = "~M:Atata.UnitTests.DataProvision.StaticSubjectTests.TestClass.GetEntityAsTaskAsync(System.String)~System.Threading.Tasks.Task{Atata.UnitTests.DataProvision.StaticSubjectTests.TestEntity}")]
[assembly: SuppressMessage("Minor Code Smell", "S2325:Methods and properties that don't access instance data should be static", Justification = "<Pending>", Scope = "member", Target = "~M:Atata.UnitTests.Attributes.Context.ConfigureAtataContextAttributeTests.ConfigureAtataContext.ConfigureViaThisInstanceMethod(Atata.AtataContextBuilder)")]
[assembly: SuppressMessage("Minor Code Smell", "S2325:Methods and properties that don't access instance data should be static", Justification = "<Pending>", Scope = "member", Target = "~M:Atata.UnitTests.Attributes.Context.ConfigureAtataContextAttributeTests.ConfigureAtataContext.OtherClass.ConfigureViaOtherInstanceMethod(Atata.AtataContextBuilder)")]
